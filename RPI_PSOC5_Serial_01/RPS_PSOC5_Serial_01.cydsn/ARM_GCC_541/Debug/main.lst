ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 52656164 		.ascii	"Read from the EEPROM\012\015\000"
  22      2066726F 
  22      6D207468 
  22      65204545 
  22      50524F4D 
  23 0017 00       		.align	2
  24              	.LC1:
  25 0018 57726974 		.ascii	"Write to the EEPROM...\000"
  25      6520746F 
  25      20746865 
  25      20454550 
  25      524F4D2E 
  26 002f 00       		.align	2
  27              	.LC2:
  28 0030 436F6D70 		.ascii	"Completed EEPROM write\012\015\000"
  28      6C657465 
  28      64204545 
  28      50524F4D 
  28      20777269 
  29 0049 000000   		.align	2
  30              	.LC3:
  31 004c 426C696E 		.ascii	"Blinking the LEDs on the RPP-UIO-16 card, please wa"
  31      6B696E67 
  31      20746865 
  31      204C4544 
  31      73206F6E 
  32 007f 69740A0D 		.ascii	"it\012\015\000"
  32      00
  33              		.align	2
  34              	.LC4:
  35 0084 436F6D70 		.ascii	"Completed blinking the LEDs on the RPP-UIO-16 card\012"
  35      6C657465 
  35      6420626C 
  35      696E6B69 
  35      6E672074 
  36 00b7 0D00     		.ascii	"\015\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 2


  37 00b9 000000   		.align	2
  38              	.LC5:
  39 00bc 4E6F7420 		.ascii	"Not a valid command, legal values are r, w, b\012\015"
  39      61207661 
  39      6C696420 
  39      636F6D6D 
  39      616E642C 
  40 00eb 00       		.ascii	"\000"
  41              		.section	.text.main,"ax",%progbits
  42              		.align	2
  43              		.global	main
  44              		.thumb
  45              		.thumb_func
  46              		.type	main, %function
  47              	main:
  48              	.LFB64:
  49              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 2.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   The component is enumerated as a Virtual Com port. Receives data from the 
   8:main.c        **** *   hyper terminal, then sends back the received data.
   9:main.c        **** *
  10:main.c        **** * Related Document:
  11:main.c        **** *  Universal Serial Bus Specification Revision 2.0
  12:main.c        **** *  Universal Serial Bus Class Definitions for Communications Devices
  13:main.c        **** *  Revision 1.2
  14:main.c        **** *
  15:main.c        **** ********************************************************************************
  16:main.c        **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  17:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  18:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  19:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  20:main.c        **** * accompanying the software package from which you obtained this software.
  21:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  22:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  23:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  24:main.c        **** *******************************************************************************/
  25:main.c        **** 
  26:main.c        **** #include <project.h>
  27:main.c        **** #include "stdio.h"
  28:main.c        **** #include "Test_RPP-UIO_16.h"
  29:main.c        **** #include "ExtEEPROM.h"
  30:main.c        **** #include "EEPROM_Images.h"
  31:main.c        **** 
  32:main.c        **** #if defined (__GNUC__)
  33:main.c        ****     /* Add an explicit reference to the floating point printf library */
  34:main.c        ****     /* to allow usage of the floating point conversion specifiers. */
  35:main.c        ****     /* This is not linked in by default with the newlib-nano library. */
  36:main.c        **** //    asm (".global _printf_float");
  37:main.c        **** #endif
  38:main.c        **** 
  39:main.c        **** #define USBFS_DEVICE    (0u)
  40:main.c        **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 3


  41:main.c        **** /* The inBuffer size is equal to the maximum packet size of the IN and OUT bulk
  42:main.c        **** * endpoints.
  43:main.c        **** */
  44:main.c        **** #define USBUART_Buffer_SIZE (64u)
  45:main.c        **** 
  46:main.c        **** /*******************************************************************************
  47:main.c        **** * Function Name: main
  48:main.c        **** ********************************************************************************
  49:main.c        **** *
  50:main.c        **** * Summary:
  51:main.c        **** *  The main function performs the following actions:
  52:main.c        **** *   1. Waits until VBUS becomes valid and starts the USBFS component which is
  53:main.c        **** *      enumerated as virtual Com port.
  54:main.c        **** *   2. Waits until the device is enumerated by the host.
  55:main.c        **** *   3. Waits for data coming from the hyper terminal
  56:main.c        **** *   4. Parse command.
  57:main.c        **** *
  58:main.c        **** * Parameters:
  59:main.c        **** *  None.
  60:main.c        **** *
  61:main.c        **** * Return:
  62:main.c        **** *  None.
  63:main.c        **** *
  64:main.c        **** *******************************************************************************/
  65:main.c        **** int main()
  66:main.c        **** {
  50              		.loc 1 66 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 392
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 B0B5     		push	{r4, r5, r7, lr}
  55              		.cfi_def_cfa_offset 16
  56              		.cfi_offset 4, -16
  57              		.cfi_offset 5, -12
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 E2B0     		sub	sp, sp, #392
  61              		.cfi_def_cfa_offset 408
  62 0004 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  67:main.c        ****     uint16 inCount;
  68:main.c        ****     uint16 outCount;
  69:main.c        ****     uint8 inBuffer[USBUART_Buffer_SIZE];
  70:main.c        ****     char outBuffer[USBUART_Buffer_SIZE];
  71:main.c        ****     uint8 eepromBuffer[256];
  72:main.c        ****         
  73:main.c        ****     CyGlobalIntEnable;
  64              		.loc 1 73 0
  65              		.syntax unified
  66              	@ 73 "main.c" 1
  67 0006 62B6     		CPSIE   i
  68              	@ 0 "" 2
  74:main.c        **** 
  75:main.c        ****     /* Start USBFS operation with 5-V operation. */
  76:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
  69              		.loc 1 76 0
  70              		.thumb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 4


  71              		.syntax unified
  72 0008 0121     		movs	r1, #1
  73 000a 0020     		movs	r0, #0
  74 000c FFF7FEFF 		bl	USBUART_Start
  77:main.c        **** 
  78:main.c        ****     // enable I2C interrupts
  79:main.c        **** 	I2C_EEPROM_EnableInt();  
  75              		.loc 1 79 0
  76 0010 984B     		ldr	r3, .L19
  77 0012 4FF40042 		mov	r2, #32768
  78 0016 1A60     		str	r2, [r3]
  80:main.c        **** 	//Start I2C
  81:main.c        **** 	I2C_EEPROM_Start(); 
  79              		.loc 1 81 0
  80 0018 FFF7FEFF 		bl	I2C_EEPROM_Start
  81              	.L18:
  82:main.c        ****     
  83:main.c        ****     for(;;)
  84:main.c        ****     {
  85:main.c        ****         /* Host can send double SET_INTERFACE request. */
  86:main.c        ****         if (0u != USBUART_IsConfigurationChanged())
  82              		.loc 1 86 0
  83 001c FFF7FEFF 		bl	USBUART_IsConfigurationChanged
  84 0020 0346     		mov	r3, r0
  85 0022 002B     		cmp	r3, #0
  86 0024 06D0     		beq	.L2
  87:main.c        ****         {
  88:main.c        ****             /* Initialize IN endpoints when device is configured. */
  89:main.c        ****             if (0u != USBUART_GetConfiguration())
  87              		.loc 1 89 0
  88 0026 FFF7FEFF 		bl	USBUART_GetConfiguration
  89 002a 0346     		mov	r3, r0
  90 002c 002B     		cmp	r3, #0
  91 002e 01D0     		beq	.L2
  90:main.c        ****             {
  91:main.c        ****                 /* Enumeration is done, enable OUT endpoint to receive data 
  92:main.c        ****                  * from host. */
  93:main.c        ****                 USBUART_CDC_Init();
  92              		.loc 1 93 0
  93 0030 FFF7FEFF 		bl	USBUART_CDC_Init
  94              	.L2:
  94:main.c        ****             }
  95:main.c        ****         }
  96:main.c        **** 
  97:main.c        ****         /* Service USB CDC when device is configured. */
  98:main.c        ****         if (0u != USBUART_GetConfiguration())
  95              		.loc 1 98 0
  96 0034 FFF7FEFF 		bl	USBUART_GetConfiguration
  97 0038 0346     		mov	r3, r0
  98 003a 002B     		cmp	r3, #0
  99 003c EED0     		beq	.L18
  99:main.c        ****         {
 100:main.c        ****             /* Check for input data from host. */
 101:main.c        ****             if (0u != USBUART_DataIsReady())
 100              		.loc 1 101 0
 101 003e FFF7FEFF 		bl	USBUART_DataIsReady
 102 0042 0346     		mov	r3, r0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 5


 103 0044 002B     		cmp	r3, #0
 104 0046 E9D0     		beq	.L18
 102:main.c        ****             {
 103:main.c        ****                 /* Read received data and re-enable OUT endpoint. */
 104:main.c        ****                 inCount = USBUART_GetAll(inBuffer);
 105              		.loc 1 104 0
 106 0048 07F5A273 		add	r3, r7, #324
 107 004c 1846     		mov	r0, r3
 108 004e FFF7FEFF 		bl	USBUART_GetAll
 109 0052 0346     		mov	r3, r0
 110 0054 A7F88631 		strh	r3, [r7, #390]	@ movhi
 105:main.c        **** 
 106:main.c        ****                 if (0u != inCount)
 111              		.loc 1 106 0
 112 0058 B7F88631 		ldrh	r3, [r7, #390]
 113 005c 002B     		cmp	r3, #0
 114 005e DDD0     		beq	.L18
 107:main.c        ****                 {
 108:main.c        ****                     /* Wait until component is ready to send data to host. */
 109:main.c        ****                     while (0u == USBUART_CDCIsReady());
 115              		.loc 1 109 0
 116 0060 00BF     		nop
 117              	.L4:
 118              		.loc 1 109 0 is_stmt 0 discriminator 1
 119 0062 FFF7FEFF 		bl	USBUART_CDCIsReady
 120 0066 0346     		mov	r3, r0
 121 0068 002B     		cmp	r3, #0
 122 006a FAD0     		beq	.L4
 110:main.c        ****                     if ((inBuffer[0] == 'r') || (inBuffer[0] == 'R'))
 123              		.loc 1 110 0 is_stmt 1
 124 006c 97F84431 		ldrb	r3, [r7, #324]	@ zero_extendqisi2
 125 0070 722B     		cmp	r3, #114
 126 0072 03D0     		beq	.L5
 127              		.loc 1 110 0 is_stmt 0 discriminator 1
 128 0074 97F84431 		ldrb	r3, [r7, #324]	@ zero_extendqisi2
 129 0078 522B     		cmp	r3, #82
 130 007a 2DD1     		bne	.L6
 131              	.L5:
 111:main.c        ****                     {
 112:main.c        ****                         strcpy(outBuffer,"Read from the EEPROM\n\r");
 132              		.loc 1 112 0 is_stmt 1
 133 007c 07F58273 		add	r3, r7, #260
 134 0080 7D4A     		ldr	r2, .L19+4
 135 0082 1C46     		mov	r4, r3
 136 0084 1546     		mov	r5, r2
 137 0086 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 138 0088 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 139 008a 95E80300 		ldmia	r5, {r0, r1}
 140 008e 2060     		str	r0, [r4]
 141 0090 0434     		adds	r4, r4, #4
 142 0092 2180     		strh	r1, [r4]	@ movhi
 143 0094 0234     		adds	r4, r4, #2
 144 0096 0B0C     		lsrs	r3, r1, #16
 145 0098 2370     		strb	r3, [r4]
 113:main.c        ****                         outCount = strlen(outBuffer);
 146              		.loc 1 113 0
 147 009a 07F58273 		add	r3, r7, #260
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 6


 148 009e 1846     		mov	r0, r3
 149 00a0 FFF7FEFF 		bl	strlen
 150 00a4 0346     		mov	r3, r0
 151 00a6 A7F88431 		strh	r3, [r7, #388]	@ movhi
 114:main.c        ****                         USBUART_PutData((uint8 *)outBuffer, outCount);
 152              		.loc 1 114 0
 153 00aa B7F88421 		ldrh	r2, [r7, #388]
 154 00ae 07F58273 		add	r3, r7, #260
 155 00b2 1146     		mov	r1, r2
 156 00b4 1846     		mov	r0, r3
 157 00b6 FFF7FEFF 		bl	USBUART_PutData
 115:main.c        ****                         while (0u == USBUART_CDCIsReady());
 158              		.loc 1 115 0
 159 00ba 00BF     		nop
 160              	.L7:
 161              		.loc 1 115 0 is_stmt 0 discriminator 1
 162 00bc FFF7FEFF 		bl	USBUART_CDCIsReady
 163 00c0 0346     		mov	r3, r0
 164 00c2 002B     		cmp	r3, #0
 165 00c4 FAD0     		beq	.L7
 116:main.c        ****                         readEEPROM(eepromBuffer);
 166              		.loc 1 116 0 is_stmt 1
 167 00c6 3B1D     		adds	r3, r7, #4
 168 00c8 1846     		mov	r0, r3
 169 00ca FFF7FEFF 		bl	readEEPROM
 117:main.c        ****                         dumpEEPROM(eepromBuffer);
 170              		.loc 1 117 0
 171 00ce 3B1D     		adds	r3, r7, #4
 172 00d0 1846     		mov	r0, r3
 173 00d2 FFF7FEFF 		bl	dumpEEPROM
 174 00d6 BCE0     		b	.L8
 175              	.L6:
 118:main.c        ****                     }
 119:main.c        ****                     else if ((inBuffer[0] == 'w') || (inBuffer[0] == 'W'))
 176              		.loc 1 119 0
 177 00d8 97F84431 		ldrb	r3, [r7, #324]	@ zero_extendqisi2
 178 00dc 772B     		cmp	r3, #119
 179 00de 03D0     		beq	.L9
 180              		.loc 1 119 0 is_stmt 0 discriminator 1
 181 00e0 97F84431 		ldrb	r3, [r7, #324]	@ zero_extendqisi2
 182 00e4 572B     		cmp	r3, #87
 183 00e6 43D1     		bne	.L10
 184              	.L9:
 120:main.c        ****                     {
 121:main.c        ****                         strcpy(outBuffer,"Write to the EEPROM...");
 185              		.loc 1 121 0 is_stmt 1
 186 00e8 07F58273 		add	r3, r7, #260
 187 00ec 634A     		ldr	r2, .L19+8
 188 00ee 1C46     		mov	r4, r3
 189 00f0 1546     		mov	r5, r2
 190 00f2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 191 00f4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 192 00f6 95E80300 		ldmia	r5, {r0, r1}
 193 00fa 2060     		str	r0, [r4]
 194 00fc 0434     		adds	r4, r4, #4
 195 00fe 2180     		strh	r1, [r4]	@ movhi
 196 0100 0234     		adds	r4, r4, #2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 7


 197 0102 0B0C     		lsrs	r3, r1, #16
 198 0104 2370     		strb	r3, [r4]
 122:main.c        ****                         outCount = strlen(outBuffer);
 199              		.loc 1 122 0
 200 0106 07F58273 		add	r3, r7, #260
 201 010a 1846     		mov	r0, r3
 202 010c FFF7FEFF 		bl	strlen
 203 0110 0346     		mov	r3, r0
 204 0112 A7F88431 		strh	r3, [r7, #388]	@ movhi
 123:main.c        ****                         USBUART_PutData((uint8 *)outBuffer, outCount);
 205              		.loc 1 123 0
 206 0116 B7F88421 		ldrh	r2, [r7, #388]
 207 011a 07F58273 		add	r3, r7, #260
 208 011e 1146     		mov	r1, r2
 209 0120 1846     		mov	r0, r3
 210 0122 FFF7FEFF 		bl	USBUART_PutData
 124:main.c        ****                         while (0u == USBUART_CDCIsReady());
 211              		.loc 1 124 0
 212 0126 00BF     		nop
 213              	.L11:
 214              		.loc 1 124 0 is_stmt 0 discriminator 1
 215 0128 FFF7FEFF 		bl	USBUART_CDCIsReady
 216 012c 0346     		mov	r3, r0
 217 012e 002B     		cmp	r3, #0
 218 0130 FAD0     		beq	.L11
 125:main.c        ****                         writeEEPROM(RPPUIO16);
 219              		.loc 1 125 0 is_stmt 1
 220 0132 0020     		movs	r0, #0
 221 0134 FFF7FEFF 		bl	writeEEPROM
 126:main.c        ****                         strcpy(outBuffer,"Completed EEPROM write\n\r");
 222              		.loc 1 126 0
 223 0138 07F58273 		add	r3, r7, #260
 224 013c 504A     		ldr	r2, .L19+12
 225 013e 1C46     		mov	r4, r3
 226 0140 1546     		mov	r5, r2
 227 0142 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 228 0144 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 229 0146 95E80700 		ldmia	r5, {r0, r1, r2}
 230 014a 03C4     		stmia	r4!, {r0, r1}
 231 014c 2270     		strb	r2, [r4]
 127:main.c        ****                         outCount = strlen(outBuffer);
 232              		.loc 1 127 0
 233 014e 07F58273 		add	r3, r7, #260
 234 0152 1846     		mov	r0, r3
 235 0154 FFF7FEFF 		bl	strlen
 236 0158 0346     		mov	r3, r0
 237 015a A7F88431 		strh	r3, [r7, #388]	@ movhi
 128:main.c        ****                         USBUART_PutData((uint8 *)outBuffer, outCount);
 238              		.loc 1 128 0
 239 015e B7F88421 		ldrh	r2, [r7, #388]
 240 0162 07F58273 		add	r3, r7, #260
 241 0166 1146     		mov	r1, r2
 242 0168 1846     		mov	r0, r3
 243 016a FFF7FEFF 		bl	USBUART_PutData
 244 016e 70E0     		b	.L8
 245              	.L10:
 129:main.c        ****                     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 8


 130:main.c        ****                     else if ((inBuffer[0] == 'b') || (inBuffer[0] == 'B'))
 246              		.loc 1 130 0
 247 0170 97F84431 		ldrb	r3, [r7, #324]	@ zero_extendqisi2
 248 0174 622B     		cmp	r3, #98
 249 0176 03D0     		beq	.L12
 250              		.loc 1 130 0 is_stmt 0 discriminator 1
 251 0178 97F84431 		ldrb	r3, [r7, #324]	@ zero_extendqisi2
 252 017c 422B     		cmp	r3, #66
 253 017e 45D1     		bne	.L13
 254              	.L12:
 131:main.c        ****                     {
 132:main.c        ****                         strcpy(outBuffer,"Blinking the LEDs on the RPP-UIO-16 card, please wait\n\r
 255              		.loc 1 132 0 is_stmt 1
 256 0180 07F58273 		add	r3, r7, #260
 257 0184 3F4A     		ldr	r2, .L19+16
 258 0186 1C46     		mov	r4, r3
 259 0188 1546     		mov	r5, r2
 260 018a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 261 018c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 262 018e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 263 0190 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 264 0192 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 265 0194 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 266 0196 95E80300 		ldmia	r5, {r0, r1}
 267 019a 84E80300 		stmia	r4, {r0, r1}
 133:main.c        ****                         outCount = strlen(outBuffer);
 268              		.loc 1 133 0
 269 019e 07F58273 		add	r3, r7, #260
 270 01a2 1846     		mov	r0, r3
 271 01a4 FFF7FEFF 		bl	strlen
 272 01a8 0346     		mov	r3, r0
 273 01aa A7F88431 		strh	r3, [r7, #388]	@ movhi
 134:main.c        ****                         USBUART_PutData((uint8 *)outBuffer, outCount);
 274              		.loc 1 134 0
 275 01ae B7F88421 		ldrh	r2, [r7, #388]
 276 01b2 07F58273 		add	r3, r7, #260
 277 01b6 1146     		mov	r1, r2
 278 01b8 1846     		mov	r0, r3
 279 01ba FFF7FEFF 		bl	USBUART_PutData
 135:main.c        ****                         while (0u == USBUART_CDCIsReady());
 280              		.loc 1 135 0
 281 01be 00BF     		nop
 282              	.L14:
 283              		.loc 1 135 0 is_stmt 0 discriminator 1
 284 01c0 FFF7FEFF 		bl	USBUART_CDCIsReady
 285 01c4 0346     		mov	r3, r0
 286 01c6 002B     		cmp	r3, #0
 287 01c8 FAD0     		beq	.L14
 136:main.c        ****                         testRPPUIO16();
 288              		.loc 1 136 0 is_stmt 1
 289 01ca FFF7FEFF 		bl	testRPPUIO16
 137:main.c        ****                         strcpy(outBuffer,"Completed blinking the LEDs on the RPP-UIO-16 card\n\r");
 290              		.loc 1 137 0
 291 01ce 07F58273 		add	r3, r7, #260
 292 01d2 2D4A     		ldr	r2, .L19+20
 293 01d4 1C46     		mov	r4, r3
 294 01d6 1546     		mov	r5, r2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 9


 295 01d8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 296 01da 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 297 01dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 298 01de 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 299 01e0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 300 01e2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 301 01e4 95E80300 		ldmia	r5, {r0, r1}
 302 01e8 2060     		str	r0, [r4]
 303 01ea 0434     		adds	r4, r4, #4
 304 01ec 2170     		strb	r1, [r4]
 138:main.c        ****                         USBUART_PutData((uint8 *)outBuffer, outCount);
 305              		.loc 1 138 0
 306 01ee B7F88421 		ldrh	r2, [r7, #388]
 307 01f2 07F58273 		add	r3, r7, #260
 308 01f6 1146     		mov	r1, r2
 309 01f8 1846     		mov	r0, r3
 310 01fa FFF7FEFF 		bl	USBUART_PutData
 139:main.c        ****                         while (0u == USBUART_CDCIsReady());
 311              		.loc 1 139 0
 312 01fe 00BF     		nop
 313              	.L15:
 314              		.loc 1 139 0 is_stmt 0 discriminator 1
 315 0200 FFF7FEFF 		bl	USBUART_CDCIsReady
 316 0204 0346     		mov	r3, r0
 317 0206 002B     		cmp	r3, #0
 318 0208 FAD0     		beq	.L15
 130:main.c        ****                     {
 319              		.loc 1 130 0 is_stmt 1
 320 020a 22E0     		b	.L8
 321              	.L13:
 140:main.c        ****                     }
 141:main.c        ****                     else
 142:main.c        ****                     {
 143:main.c        ****                         strcpy(outBuffer,"Not a valid command, legal values are r, w, b\n\r");
 322              		.loc 1 143 0
 323 020c 07F58273 		add	r3, r7, #260
 324 0210 1E4A     		ldr	r2, .L19+24
 325 0212 1C46     		mov	r4, r3
 326 0214 1546     		mov	r5, r2
 327 0216 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 328 0218 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 329 021a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 330 021c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 331 021e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 332 0222 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 144:main.c        ****                         outCount = strlen(outBuffer);
 333              		.loc 1 144 0
 334 0226 07F58273 		add	r3, r7, #260
 335 022a 1846     		mov	r0, r3
 336 022c FFF7FEFF 		bl	strlen
 337 0230 0346     		mov	r3, r0
 338 0232 A7F88431 		strh	r3, [r7, #388]	@ movhi
 145:main.c        ****                         USBUART_PutData((uint8 *)outBuffer, outCount);
 339              		.loc 1 145 0
 340 0236 B7F88421 		ldrh	r2, [r7, #388]
 341 023a 07F58273 		add	r3, r7, #260
 342 023e 1146     		mov	r1, r2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 10


 343 0240 1846     		mov	r0, r3
 344 0242 FFF7FEFF 		bl	USBUART_PutData
 146:main.c        ****                         while (0u == USBUART_CDCIsReady());
 345              		.loc 1 146 0
 346 0246 00BF     		nop
 347              	.L16:
 348              		.loc 1 146 0 is_stmt 0 discriminator 1
 349 0248 FFF7FEFF 		bl	USBUART_CDCIsReady
 350 024c 0346     		mov	r3, r0
 351 024e 002B     		cmp	r3, #0
 352 0250 FAD0     		beq	.L16
 353              	.L8:
 147:main.c        ****                     }
 148:main.c        ****                     /* If the last sent packet is exactly the maximum packet 
 149:main.c        ****                     *  size, it is followed by a zero-length packet to assure
 150:main.c        ****                     *  that the end of the segment is properly identified by 
 151:main.c        ****                     *  the terminal.
 152:main.c        ****                     */
 153:main.c        ****                     if (USBUART_Buffer_SIZE == inCount)
 354              		.loc 1 153 0 is_stmt 1
 355 0252 B7F88631 		ldrh	r3, [r7, #390]
 356 0256 402B     		cmp	r3, #64
 357 0258 7FF4E0AE 		bne	.L18
 154:main.c        ****                     {
 155:main.c        ****                         /* Wait until component is ready to send data to PC. */
 156:main.c        ****                         while (0u == USBUART_CDCIsReady())
 358              		.loc 1 156 0
 359 025c 00BF     		nop
 360              	.L17:
 361              		.loc 1 156 0 is_stmt 0 discriminator 1
 362 025e FFF7FEFF 		bl	USBUART_CDCIsReady
 363 0262 0346     		mov	r3, r0
 364 0264 002B     		cmp	r3, #0
 365 0266 FAD0     		beq	.L17
 157:main.c        ****                         {
 158:main.c        ****                         }
 159:main.c        **** 
 160:main.c        ****                         /* Send zero-length packet to PC. */
 161:main.c        ****                         USBUART_PutData(NULL, 0u);
 366              		.loc 1 161 0 is_stmt 1
 367 0268 0021     		movs	r1, #0
 368 026a 0020     		movs	r0, #0
 369 026c FFF7FEFF 		bl	USBUART_PutData
 162:main.c        ****                     }
 163:main.c        ****                 }
 164:main.c        ****             }
 165:main.c        ****         }
 166:main.c        ****     }
 370              		.loc 1 166 0
 371 0270 D4E6     		b	.L18
 372              	.L20:
 373 0272 00BF     		.align	2
 374              	.L19:
 375 0274 00E100E0 		.word	-536813312
 376 0278 00000000 		.word	.LC0
 377 027c 18000000 		.word	.LC1
 378 0280 30000000 		.word	.LC2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 11


 379 0284 4C000000 		.word	.LC3
 380 0288 84000000 		.word	.LC4
 381 028c BC000000 		.word	.LC5
 382              		.cfi_endproc
 383              	.LFE64:
 384              		.size	main, .-main
 385              		.text
 386              	.Letext0:
 387              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 388              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 389              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 390              		.file 5 "EEPROM_Images.h"
 391              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 392              		.section	.debug_info,"",%progbits
 393              	.Ldebug_info0:
 394 0000 9D010000 		.4byte	0x19d
 395 0004 0400     		.2byte	0x4
 396 0006 00000000 		.4byte	.Ldebug_abbrev0
 397 000a 04       		.byte	0x4
 398 000b 01       		.uleb128 0x1
 399 000c 06000000 		.4byte	.LASF28
 400 0010 0C       		.byte	0xc
 401 0011 E1010000 		.4byte	.LASF29
 402 0015 5C010000 		.4byte	.LASF30
 403 0019 00000000 		.4byte	.Ldebug_ranges0+0
 404 001d 00000000 		.4byte	0
 405 0021 00000000 		.4byte	.Ldebug_line0
 406 0025 02       		.uleb128 0x2
 407 0026 01       		.byte	0x1
 408 0027 06       		.byte	0x6
 409 0028 12020000 		.4byte	.LASF0
 410 002c 02       		.uleb128 0x2
 411 002d 01       		.byte	0x1
 412 002e 08       		.byte	0x8
 413 002f B4000000 		.4byte	.LASF1
 414 0033 02       		.uleb128 0x2
 415 0034 02       		.byte	0x2
 416 0035 05       		.byte	0x5
 417 0036 ED010000 		.4byte	.LASF2
 418 003a 02       		.uleb128 0x2
 419 003b 02       		.byte	0x2
 420 003c 07       		.byte	0x7
 421 003d D3000000 		.4byte	.LASF3
 422 0041 03       		.uleb128 0x3
 423 0042 94000000 		.4byte	.LASF9
 424 0046 02       		.byte	0x2
 425 0047 3F       		.byte	0x3f
 426 0048 4C000000 		.4byte	0x4c
 427 004c 02       		.uleb128 0x2
 428 004d 04       		.byte	0x4
 429 004e 05       		.byte	0x5
 430 004f FD010000 		.4byte	.LASF4
 431 0053 02       		.uleb128 0x2
 432 0054 04       		.byte	0x4
 433 0055 07       		.byte	0x7
 434 0056 F3000000 		.4byte	.LASF5
 435 005a 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 12


 436 005b 08       		.byte	0x8
 437 005c 05       		.byte	0x5
 438 005d D3010000 		.4byte	.LASF6
 439 0061 02       		.uleb128 0x2
 440 0062 08       		.byte	0x8
 441 0063 07       		.byte	0x7
 442 0064 3D010000 		.4byte	.LASF7
 443 0068 04       		.uleb128 0x4
 444 0069 04       		.byte	0x4
 445 006a 05       		.byte	0x5
 446 006b 696E7400 		.ascii	"int\000"
 447 006f 02       		.uleb128 0x2
 448 0070 04       		.byte	0x4
 449 0071 07       		.byte	0x7
 450 0072 30010000 		.4byte	.LASF8
 451 0076 03       		.uleb128 0x3
 452 0077 B5010000 		.4byte	.LASF10
 453 007b 03       		.byte	0x3
 454 007c 2C       		.byte	0x2c
 455 007d 41000000 		.4byte	0x41
 456 0081 05       		.uleb128 0x5
 457 0082 F7010000 		.4byte	.LASF11
 458 0086 04       		.byte	0x4
 459 0087 E401     		.2byte	0x1e4
 460 0089 2C000000 		.4byte	0x2c
 461 008d 05       		.uleb128 0x5
 462 008e 18010000 		.4byte	.LASF12
 463 0092 04       		.byte	0x4
 464 0093 E501     		.2byte	0x1e5
 465 0095 3A000000 		.4byte	0x3a
 466 0099 05       		.uleb128 0x5
 467 009a 1F010000 		.4byte	.LASF13
 468 009e 04       		.byte	0x4
 469 009f E601     		.2byte	0x1e6
 470 00a1 53000000 		.4byte	0x53
 471 00a5 02       		.uleb128 0x2
 472 00a6 04       		.byte	0x4
 473 00a7 04       		.byte	0x4
 474 00a8 A5000000 		.4byte	.LASF14
 475 00ac 02       		.uleb128 0x2
 476 00ad 08       		.byte	0x8
 477 00ae 04       		.byte	0x4
 478 00af 9E000000 		.4byte	.LASF15
 479 00b3 02       		.uleb128 0x2
 480 00b4 01       		.byte	0x1
 481 00b5 08       		.byte	0x8
 482 00b6 E8010000 		.4byte	.LASF16
 483 00ba 05       		.uleb128 0x5
 484 00bb 00000000 		.4byte	.LASF17
 485 00bf 04       		.byte	0x4
 486 00c0 9002     		.2byte	0x290
 487 00c2 C6000000 		.4byte	0xc6
 488 00c6 06       		.uleb128 0x6
 489 00c7 99000000 		.4byte	0x99
 490 00cb 02       		.uleb128 0x2
 491 00cc 08       		.byte	0x8
 492 00cd 04       		.byte	0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 13


 493 00ce 06020000 		.4byte	.LASF18
 494 00d2 02       		.uleb128 0x2
 495 00d3 04       		.byte	0x4
 496 00d4 07       		.byte	0x7
 497 00d5 BD010000 		.4byte	.LASF19
 498 00d9 07       		.uleb128 0x7
 499 00da 05010000 		.4byte	.LASF31
 500 00de 01       		.byte	0x1
 501 00df 2C000000 		.4byte	0x2c
 502 00e3 05       		.byte	0x5
 503 00e4 0D       		.byte	0xd
 504 00e5 FC000000 		.4byte	0xfc
 505 00e9 08       		.uleb128 0x8
 506 00ea AB000000 		.4byte	.LASF20
 507 00ee 00       		.byte	0
 508 00ef 08       		.uleb128 0x8
 509 00f0 C9000000 		.4byte	.LASF21
 510 00f4 01       		.byte	0x1
 511 00f5 08       		.uleb128 0x8
 512 00f6 C2000000 		.4byte	.LASF22
 513 00fa 02       		.byte	0x2
 514 00fb 00       		.byte	0
 515 00fc 09       		.uleb128 0x9
 516 00fd 13010000 		.4byte	.LASF32
 517 0101 01       		.byte	0x1
 518 0102 41       		.byte	0x41
 519 0103 68000000 		.4byte	0x68
 520 0107 00000000 		.4byte	.LFB64
 521 010b 90020000 		.4byte	.LFE64-.LFB64
 522 010f 01       		.uleb128 0x1
 523 0110 9C       		.byte	0x9c
 524 0111 5F010000 		.4byte	0x15f
 525 0115 0A       		.uleb128 0xa
 526 0116 54010000 		.4byte	.LASF23
 527 011a 01       		.byte	0x1
 528 011b 43       		.byte	0x43
 529 011c 8D000000 		.4byte	0x8d
 530 0120 02       		.uleb128 0x2
 531 0121 91       		.byte	0x91
 532 0122 6E       		.sleb128 -18
 533 0123 0A       		.uleb128 0xa
 534 0124 1E020000 		.4byte	.LASF24
 535 0128 01       		.byte	0x1
 536 0129 44       		.byte	0x44
 537 012a 8D000000 		.4byte	0x8d
 538 012e 02       		.uleb128 0x2
 539 012f 91       		.byte	0x91
 540 0130 6C       		.sleb128 -20
 541 0131 0A       		.uleb128 0xa
 542 0132 27020000 		.4byte	.LASF25
 543 0136 01       		.byte	0x1
 544 0137 45       		.byte	0x45
 545 0138 5F010000 		.4byte	0x15f
 546 013c 03       		.uleb128 0x3
 547 013d 91       		.byte	0x91
 548 013e AC7F     		.sleb128 -84
 549 0140 0A       		.uleb128 0xa
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 14


 550 0141 26010000 		.4byte	.LASF26
 551 0145 01       		.byte	0x1
 552 0146 46       		.byte	0x46
 553 0147 6F010000 		.4byte	0x16f
 554 014b 03       		.uleb128 0x3
 555 014c 91       		.byte	0x91
 556 014d EC7E     		.sleb128 -148
 557 014f 0A       		.uleb128 0xa
 558 0150 C6010000 		.4byte	.LASF27
 559 0154 01       		.byte	0x1
 560 0155 47       		.byte	0x47
 561 0156 7F010000 		.4byte	0x17f
 562 015a 03       		.uleb128 0x3
 563 015b 91       		.byte	0x91
 564 015c EC7C     		.sleb128 -404
 565 015e 00       		.byte	0
 566 015f 0B       		.uleb128 0xb
 567 0160 81000000 		.4byte	0x81
 568 0164 6F010000 		.4byte	0x16f
 569 0168 0C       		.uleb128 0xc
 570 0169 D2000000 		.4byte	0xd2
 571 016d 3F       		.byte	0x3f
 572 016e 00       		.byte	0
 573 016f 0B       		.uleb128 0xb
 574 0170 B3000000 		.4byte	0xb3
 575 0174 7F010000 		.4byte	0x17f
 576 0178 0C       		.uleb128 0xc
 577 0179 D2000000 		.4byte	0xd2
 578 017d 3F       		.byte	0x3f
 579 017e 00       		.byte	0
 580 017f 0B       		.uleb128 0xb
 581 0180 81000000 		.4byte	0x81
 582 0184 8F010000 		.4byte	0x18f
 583 0188 0C       		.uleb128 0xc
 584 0189 D2000000 		.4byte	0xd2
 585 018d FF       		.byte	0xff
 586 018e 00       		.byte	0
 587 018f 0D       		.uleb128 0xd
 588 0190 E6000000 		.4byte	.LASF33
 589 0194 06       		.byte	0x6
 590 0195 1207     		.2byte	0x712
 591 0197 9B010000 		.4byte	0x19b
 592 019b 06       		.uleb128 0x6
 593 019c 76000000 		.4byte	0x76
 594 01a0 00       		.byte	0
 595              		.section	.debug_abbrev,"",%progbits
 596              	.Ldebug_abbrev0:
 597 0000 01       		.uleb128 0x1
 598 0001 11       		.uleb128 0x11
 599 0002 01       		.byte	0x1
 600 0003 25       		.uleb128 0x25
 601 0004 0E       		.uleb128 0xe
 602 0005 13       		.uleb128 0x13
 603 0006 0B       		.uleb128 0xb
 604 0007 03       		.uleb128 0x3
 605 0008 0E       		.uleb128 0xe
 606 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 15


 607 000a 0E       		.uleb128 0xe
 608 000b 55       		.uleb128 0x55
 609 000c 17       		.uleb128 0x17
 610 000d 11       		.uleb128 0x11
 611 000e 01       		.uleb128 0x1
 612 000f 10       		.uleb128 0x10
 613 0010 17       		.uleb128 0x17
 614 0011 00       		.byte	0
 615 0012 00       		.byte	0
 616 0013 02       		.uleb128 0x2
 617 0014 24       		.uleb128 0x24
 618 0015 00       		.byte	0
 619 0016 0B       		.uleb128 0xb
 620 0017 0B       		.uleb128 0xb
 621 0018 3E       		.uleb128 0x3e
 622 0019 0B       		.uleb128 0xb
 623 001a 03       		.uleb128 0x3
 624 001b 0E       		.uleb128 0xe
 625 001c 00       		.byte	0
 626 001d 00       		.byte	0
 627 001e 03       		.uleb128 0x3
 628 001f 16       		.uleb128 0x16
 629 0020 00       		.byte	0
 630 0021 03       		.uleb128 0x3
 631 0022 0E       		.uleb128 0xe
 632 0023 3A       		.uleb128 0x3a
 633 0024 0B       		.uleb128 0xb
 634 0025 3B       		.uleb128 0x3b
 635 0026 0B       		.uleb128 0xb
 636 0027 49       		.uleb128 0x49
 637 0028 13       		.uleb128 0x13
 638 0029 00       		.byte	0
 639 002a 00       		.byte	0
 640 002b 04       		.uleb128 0x4
 641 002c 24       		.uleb128 0x24
 642 002d 00       		.byte	0
 643 002e 0B       		.uleb128 0xb
 644 002f 0B       		.uleb128 0xb
 645 0030 3E       		.uleb128 0x3e
 646 0031 0B       		.uleb128 0xb
 647 0032 03       		.uleb128 0x3
 648 0033 08       		.uleb128 0x8
 649 0034 00       		.byte	0
 650 0035 00       		.byte	0
 651 0036 05       		.uleb128 0x5
 652 0037 16       		.uleb128 0x16
 653 0038 00       		.byte	0
 654 0039 03       		.uleb128 0x3
 655 003a 0E       		.uleb128 0xe
 656 003b 3A       		.uleb128 0x3a
 657 003c 0B       		.uleb128 0xb
 658 003d 3B       		.uleb128 0x3b
 659 003e 05       		.uleb128 0x5
 660 003f 49       		.uleb128 0x49
 661 0040 13       		.uleb128 0x13
 662 0041 00       		.byte	0
 663 0042 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 16


 664 0043 06       		.uleb128 0x6
 665 0044 35       		.uleb128 0x35
 666 0045 00       		.byte	0
 667 0046 49       		.uleb128 0x49
 668 0047 13       		.uleb128 0x13
 669 0048 00       		.byte	0
 670 0049 00       		.byte	0
 671 004a 07       		.uleb128 0x7
 672 004b 04       		.uleb128 0x4
 673 004c 01       		.byte	0x1
 674 004d 03       		.uleb128 0x3
 675 004e 0E       		.uleb128 0xe
 676 004f 0B       		.uleb128 0xb
 677 0050 0B       		.uleb128 0xb
 678 0051 49       		.uleb128 0x49
 679 0052 13       		.uleb128 0x13
 680 0053 3A       		.uleb128 0x3a
 681 0054 0B       		.uleb128 0xb
 682 0055 3B       		.uleb128 0x3b
 683 0056 0B       		.uleb128 0xb
 684 0057 01       		.uleb128 0x1
 685 0058 13       		.uleb128 0x13
 686 0059 00       		.byte	0
 687 005a 00       		.byte	0
 688 005b 08       		.uleb128 0x8
 689 005c 28       		.uleb128 0x28
 690 005d 00       		.byte	0
 691 005e 03       		.uleb128 0x3
 692 005f 0E       		.uleb128 0xe
 693 0060 1C       		.uleb128 0x1c
 694 0061 0B       		.uleb128 0xb
 695 0062 00       		.byte	0
 696 0063 00       		.byte	0
 697 0064 09       		.uleb128 0x9
 698 0065 2E       		.uleb128 0x2e
 699 0066 01       		.byte	0x1
 700 0067 3F       		.uleb128 0x3f
 701 0068 19       		.uleb128 0x19
 702 0069 03       		.uleb128 0x3
 703 006a 0E       		.uleb128 0xe
 704 006b 3A       		.uleb128 0x3a
 705 006c 0B       		.uleb128 0xb
 706 006d 3B       		.uleb128 0x3b
 707 006e 0B       		.uleb128 0xb
 708 006f 49       		.uleb128 0x49
 709 0070 13       		.uleb128 0x13
 710 0071 11       		.uleb128 0x11
 711 0072 01       		.uleb128 0x1
 712 0073 12       		.uleb128 0x12
 713 0074 06       		.uleb128 0x6
 714 0075 40       		.uleb128 0x40
 715 0076 18       		.uleb128 0x18
 716 0077 9642     		.uleb128 0x2116
 717 0079 19       		.uleb128 0x19
 718 007a 01       		.uleb128 0x1
 719 007b 13       		.uleb128 0x13
 720 007c 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 17


 721 007d 00       		.byte	0
 722 007e 0A       		.uleb128 0xa
 723 007f 34       		.uleb128 0x34
 724 0080 00       		.byte	0
 725 0081 03       		.uleb128 0x3
 726 0082 0E       		.uleb128 0xe
 727 0083 3A       		.uleb128 0x3a
 728 0084 0B       		.uleb128 0xb
 729 0085 3B       		.uleb128 0x3b
 730 0086 0B       		.uleb128 0xb
 731 0087 49       		.uleb128 0x49
 732 0088 13       		.uleb128 0x13
 733 0089 02       		.uleb128 0x2
 734 008a 18       		.uleb128 0x18
 735 008b 00       		.byte	0
 736 008c 00       		.byte	0
 737 008d 0B       		.uleb128 0xb
 738 008e 01       		.uleb128 0x1
 739 008f 01       		.byte	0x1
 740 0090 49       		.uleb128 0x49
 741 0091 13       		.uleb128 0x13
 742 0092 01       		.uleb128 0x1
 743 0093 13       		.uleb128 0x13
 744 0094 00       		.byte	0
 745 0095 00       		.byte	0
 746 0096 0C       		.uleb128 0xc
 747 0097 21       		.uleb128 0x21
 748 0098 00       		.byte	0
 749 0099 49       		.uleb128 0x49
 750 009a 13       		.uleb128 0x13
 751 009b 2F       		.uleb128 0x2f
 752 009c 0B       		.uleb128 0xb
 753 009d 00       		.byte	0
 754 009e 00       		.byte	0
 755 009f 0D       		.uleb128 0xd
 756 00a0 34       		.uleb128 0x34
 757 00a1 00       		.byte	0
 758 00a2 03       		.uleb128 0x3
 759 00a3 0E       		.uleb128 0xe
 760 00a4 3A       		.uleb128 0x3a
 761 00a5 0B       		.uleb128 0xb
 762 00a6 3B       		.uleb128 0x3b
 763 00a7 05       		.uleb128 0x5
 764 00a8 49       		.uleb128 0x49
 765 00a9 13       		.uleb128 0x13
 766 00aa 3F       		.uleb128 0x3f
 767 00ab 19       		.uleb128 0x19
 768 00ac 3C       		.uleb128 0x3c
 769 00ad 19       		.uleb128 0x19
 770 00ae 00       		.byte	0
 771 00af 00       		.byte	0
 772 00b0 00       		.byte	0
 773              		.section	.debug_aranges,"",%progbits
 774 0000 1C000000 		.4byte	0x1c
 775 0004 0200     		.2byte	0x2
 776 0006 00000000 		.4byte	.Ldebug_info0
 777 000a 04       		.byte	0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 18


 778 000b 00       		.byte	0
 779 000c 0000     		.2byte	0
 780 000e 0000     		.2byte	0
 781 0010 00000000 		.4byte	.LFB64
 782 0014 90020000 		.4byte	.LFE64-.LFB64
 783 0018 00000000 		.4byte	0
 784 001c 00000000 		.4byte	0
 785              		.section	.debug_ranges,"",%progbits
 786              	.Ldebug_ranges0:
 787 0000 00000000 		.4byte	.LFB64
 788 0004 90020000 		.4byte	.LFE64
 789 0008 00000000 		.4byte	0
 790 000c 00000000 		.4byte	0
 791              		.section	.debug_line,"",%progbits
 792              	.Ldebug_line0:
 793 0000 ED010000 		.section	.debug_str,"MS",%progbits,1
 793      02005F01 
 793      00000201 
 793      FB0E0D00 
 793      01010101 
 794              	.LASF17:
 795 0000 72656733 		.ascii	"reg32\000"
 795      3200
 796              	.LASF28:
 797 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 797      43313120 
 797      352E342E 
 797      31203230 
 797      31363036 
 798 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 798      20726576 
 798      6973696F 
 798      6E203233 
 798      37373135 
 799 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 799      66756E63 
 799      74696F6E 
 799      2D736563 
 799      74696F6E 
 800              	.LASF9:
 801 0094 5F5F696E 		.ascii	"__int32_t\000"
 801      7433325F 
 801      7400
 802              	.LASF15:
 803 009e 646F7562 		.ascii	"double\000"
 803      6C6500
 804              	.LASF14:
 805 00a5 666C6F61 		.ascii	"float\000"
 805      7400
 806              	.LASF20:
 807 00ab 52505055 		.ascii	"RPPUIO16\000"
 807      494F3136 
 807      00
 808              	.LASF1:
 809 00b4 756E7369 		.ascii	"unsigned char\000"
 809      676E6564 
 809      20636861 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 19


 809      7200
 810              	.LASF22:
 811 00c2 52505053 		.ascii	"RPPSOC\000"
 811      4F4300
 812              	.LASF21:
 813 00c9 52505047 		.ascii	"RPPGVSCFG\000"
 813      56534346 
 813      4700
 814              	.LASF3:
 815 00d3 73686F72 		.ascii	"short unsigned int\000"
 815      7420756E 
 815      7369676E 
 815      65642069 
 815      6E7400
 816              	.LASF33:
 817 00e6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 817      52784275 
 817      66666572 
 817      00
 818              	.LASF5:
 819 00f3 6C6F6E67 		.ascii	"long unsigned int\000"
 819      20756E73 
 819      69676E65 
 819      6420696E 
 819      7400
 820              	.LASF31:
 821 0105 45455052 		.ascii	"EEPROM_Images\000"
 821      4F4D5F49 
 821      6D616765 
 821      7300
 822              	.LASF32:
 823 0113 6D61696E 		.ascii	"main\000"
 823      00
 824              	.LASF12:
 825 0118 75696E74 		.ascii	"uint16\000"
 825      313600
 826              	.LASF13:
 827 011f 75696E74 		.ascii	"uint32\000"
 827      333200
 828              	.LASF26:
 829 0126 6F757442 		.ascii	"outBuffer\000"
 829      75666665 
 829      7200
 830              	.LASF8:
 831 0130 756E7369 		.ascii	"unsigned int\000"
 831      676E6564 
 831      20696E74 
 831      00
 832              	.LASF7:
 833 013d 6C6F6E67 		.ascii	"long long unsigned int\000"
 833      206C6F6E 
 833      6720756E 
 833      7369676E 
 833      65642069 
 834              	.LASF23:
 835 0154 696E436F 		.ascii	"inCount\000"
 835      756E7400 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 20


 836              	.LASF30:
 837 015c 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\RPI_PSOC5\\RP"
 837      73657273 
 837      5C48507A 
 837      3432305C 
 837      446F6375 
 838 0189 495F5053 		.ascii	"I_PSOC5_Serial_01\\RPS_PSOC5_Serial_01.cydsn\000"
 838      4F43355F 
 838      53657269 
 838      616C5F30 
 838      315C5250 
 839              	.LASF10:
 840 01b5 696E7433 		.ascii	"int32_t\000"
 840      325F7400 
 841              	.LASF19:
 842 01bd 73697A65 		.ascii	"sizetype\000"
 842      74797065 
 842      00
 843              	.LASF27:
 844 01c6 65657072 		.ascii	"eepromBuffer\000"
 844      6F6D4275 
 844      66666572 
 844      00
 845              	.LASF6:
 846 01d3 6C6F6E67 		.ascii	"long long int\000"
 846      206C6F6E 
 846      6720696E 
 846      7400
 847              	.LASF29:
 848 01e1 6D61696E 		.ascii	"main.c\000"
 848      2E6300
 849              	.LASF16:
 850 01e8 63686172 		.ascii	"char\000"
 850      00
 851              	.LASF2:
 852 01ed 73686F72 		.ascii	"short int\000"
 852      7420696E 
 852      7400
 853              	.LASF11:
 854 01f7 75696E74 		.ascii	"uint8\000"
 854      3800
 855              	.LASF4:
 856 01fd 6C6F6E67 		.ascii	"long int\000"
 856      20696E74 
 856      00
 857              	.LASF18:
 858 0206 6C6F6E67 		.ascii	"long double\000"
 858      20646F75 
 858      626C6500 
 859              	.LASF0:
 860 0212 7369676E 		.ascii	"signed char\000"
 860      65642063 
 860      68617200 
 861              	.LASF24:
 862 021e 6F757443 		.ascii	"outCount\000"
 862      6F756E74 
 862      00
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccElXGQY.s 			page 21


 863              	.LASF25:
 864 0227 696E4275 		.ascii	"inBuffer\000"
 864      66666572 
 864      00
 865              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
