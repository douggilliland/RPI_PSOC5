ARM GAS  ./Generated_Source/PSoC5/CyBootAsmGnu.s 			page 1


   1              	/******************************************************************************
   2              	* File Name: CyBootAsmGnu.s
   3              	* Version 2.0
   4              	*
   5              	*  Description:
   6              	*   Assembly routines for GNU as.
   7              	*
   8              	********************************************************************************
   9              	* Copyright 2010, Cypress Semiconductor Corporation.  All rights reserved.
  10              	* You may use this file only in accordance with the license, terms, conditions, 
  11              	* disclaimers, and limitations in the end user license agreement accompanying 
  12              	* the software package with which this file was provided.
  13              	********************************************************************************/
  14              	
  15              	.syntax unified
  16              	.text
  17              	.thumb
  18              	
  19              	
  20              	/*******************************************************************************
  21              	* Function Name: CyDelayCycles
  22              	********************************************************************************
  23              	* Summary:
  24              	*   Delays for the specified number of cycles.
  25              	*
  26              	* Parameters:
  27              	*   cycles: number of cycles to delay.
  28              	*
  29              	* Return:
  30              	*   void.
  31              	*
  32              	*******************************************************************************/
  33              	/* void CyDelayCycles(uint32 cycles) */
  34              	.align 8
  35              	.global CyDelayCycles
  36              	.func CyDelayCycles, CyDelayCycles
  37              	.type CyDelayCycles, %function
  38              	.thumb_func
  39              	CyDelayCycles:              /* cycles bytes */
  40 0000 0230     		ADDS r0, r0, #2         /*	1	2	Round to nearest multiple of 4 */
  41 0002 8008     		LSRS r0, r0, #2         /*	1	2	Divide by 4 and set flags */
  42 0004 03D0     		BEQ CyDelayCycles_done  /*	2	2	Skip if 0 */
  43 0006 00BF     		NOP                     /*	1	2	Loop alignment padding */
  44              	CyDelayCycles_loop:
  45 0008 0138     		SUBS r0, r0, #1         /*	1	2 */
  46 000a 0046     		MOV r0, r0              /*	1	2	Pad loop to power of two cycles */
  47 000c FCD1     		BNE CyDelayCycles_loop  /*	2	2 */
  48              	CyDelayCycles_done:
  49 000e 7047     		BX lr                   /*	3	2 */
  50              	.endfunc
  51              	
  52              	
  53              	/*******************************************************************************
  54              	* Function Name: CyEnterCriticalSection
  55              	********************************************************************************
  56              	* Summary:
  57              	*   Enters a critical section and disables interrupts.
ARM GAS  ./Generated_Source/PSoC5/CyBootAsmGnu.s 			page 2


  58              	*   Implementation of CyEnterCriticalSection manipulates the IRQ enable bit with 
  59              	*   interrupts still enabled. The test and set of the interrupt bits is not atomic; 
  60              	*   this is true for both PSoC3 and PSoC5. 
  61              	*   Therefore, to avoid corrupting processor state, 
  62              	*   it must be the policy that all interrupt routines restore the 
  63              	*   interrupt enable bits as they were found on entry.
  64              	*
  65              	* Parameters:
  66              	*   void.
  67              	*
  68              	* Return:
  69              	*   Returns 1 if interrupts were previously enabled or 0 if interrupts were
  70              	*     previously disabled.
  71              	*
  72              	*******************************************************************************/
  73              	/* uint8 CyEnterCriticalSection(void) */
  74              	.global CyEnterCriticalSection
  75              	.func CyEnterCriticalSection, CyEnterCriticalSection
  76              	.type CyEnterCriticalSection, %function
  77              	.thumb_func
  78              	CyEnterCriticalSection:
  79 0010 EFF31080 		MRS r0, PRIMASK         /* Save and return interrupt state */
  80 0014 72B6     		CPSID I                 /* Disable interrupts */
  81 0016 7047     		BX lr
  82              	.endfunc
  83              	
  84              	
  85              	/*******************************************************************************
  86              	* Function Name: CyExitCriticalSection
  87              	********************************************************************************
  88              	* Summary:
  89              	*   Ends a critical section, re-enabling interrupts if they were enabled before
  90              	*   entering the critical section.
  91              	*   Implementation of CyEnterCriticalSection manipulates the IRQ enable bit with 
  92              	*   interrupts still enabled. The test and set of the interrupt bits is not atomic; 
  93              	*   this is true for both PSoC3 and PSoC5. 
  94              	*   Therefore, to avoid corrupting processor state, 
  95              	*   it must be the policy that all interrupt routines restore the 
  96              	*   interrupt enable bits as they were found on entry.
  97              	*
  98              	*
  99              	* Parameters:
 100              	*   savedIntrStatus: Nonzero to enable interrupts. Should be the value that was
 101              	*     returned from CyEnterCriticalSection.
 102              	*
 103              	* Return:
 104              	*   void.
 105              	*
 106              	*******************************************************************************/
 107              	/* void CyExitCriticalSection(uint8 savedIntrStatus) */
 108              	.global CyExitCriticalSection
 109              	.func CyExitCriticalSection, CyExitCriticalSection
 110              	.type CyExitCriticalSection, %function
 111              	.thumb_func
 112              	CyExitCriticalSection:
 113 0018 80F31088 		MSR PRIMASK, r0         /* Restore interrupt state */
 114 001c 7047     		BX lr
ARM GAS  ./Generated_Source/PSoC5/CyBootAsmGnu.s 			page 3


 115              	.endfunc
 116              	
 117 001e 00BFAFF3 	.end
 117      0080AFF3 
 117      0080AFF3 
 117      0080AFF3 
 117      0080AFF3 
