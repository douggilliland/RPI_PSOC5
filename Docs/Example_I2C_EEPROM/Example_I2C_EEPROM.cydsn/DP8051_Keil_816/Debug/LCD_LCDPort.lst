C51 COMPILER V8.16   LCD_LCDPORT                                                           12/13/2010 22:57:38 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE LCD_LCDPORT
OBJECT MODULE PLACED IN C:/Documents and Settings/akay/My Documents/Example Projects/PSoC3 I2C EEPROM/Example_I2C_EEPROM/Example_I2C_EEPROM.cydsn/DP8051_Keil_816/Debug/LCD_LCDPort.OBJ
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\1.0\PSoC Creator\import\keil\pk51\8.16\C51\BIN\c51.exe C:\Doc
                    -uments and Settings\akay\My Documents\Example Projects\PSoC3 I2C EEPROM\Example_I2C_EEPROM\Example_I2C_EEPROM.cydsn\Gene
                    -rated_Source\PSoC3\LCD_LCDPort.c NOIV LARGE MODDP2 OMF2 VB(1) PR(C:/Documents and Settings/akay/My Documents/Example Pro
                    -jects/PSoC3 I2C EEPROM/Example_I2C_EEPROM/Example_I2C_EEPROM.cydsn/DP8051_Keil_816/Debug/LCD_LCDPort.lst) DB NOIP OT(0) 
                    -INCDIR(Generated_Source/PSoC3) OJ(C:/Documents and Settings/akay/My Documents/Example Projects/PSoC3 I2C EEPROM/Example_
                    -I2C_EEPROM/Example_I2C_EEPROM.cydsn/DP8051_Keil_816/Debug/LCD_LCDPort.OBJ)

line level    source

   1          /*******************************************************************************
   2          * File Name: LCD_LCDPort.c  
   3          * Version 1.50
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "LCD_LCDPort.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: LCD_LCDPort_Write
  23          ********************************************************************************
  24          * Summary:
  25          *  Assign a new value to the digital port's data output register.  
  26          *
  27          * Parameters:  
  28          *  prtValue:  The value to be assigned to the Digital Port. 
  29          *
  30          * Return: 
  31          *  void 
  32          *  
  33          *******************************************************************************/
  34          void LCD_LCDPort_Write(uint8 value) 
  35          {
  36   1          uint8 staticBits = LCD_LCDPort_DR & ~LCD_LCDPort_MASK;
  37   1          LCD_LCDPort_DR = staticBits | ((value << LCD_LCDPort_SHIFT) & LCD_LCDPort_MASK);
  38   1      }
  39          
  40          
  41          /*******************************************************************************
  42          * Function Name: LCD_LCDPort_SetDriveMode
  43          ********************************************************************************
  44          * Summary:
  45          *  Change the drive mode on the pins of the port.
  46          * 
  47          * Parameters:  
  48          *  mode:  Change the pins to this drive mode.
  49          *
  50          * Return: 
C51 COMPILER V8.16   LCD_LCDPORT                                                           12/13/2010 22:57:38 PAGE 2   

  51          *  void
  52          *
  53          *******************************************************************************/
  54          void LCD_LCDPort_SetDriveMode(uint8 mode) 
  55          {
  56   1              CyPins_SetPinDriveMode(LCD_LCDPort_0, mode);
  57   1              CyPins_SetPinDriveMode(LCD_LCDPort_1, mode);
  58   1              CyPins_SetPinDriveMode(LCD_LCDPort_2, mode);
  59   1              CyPins_SetPinDriveMode(LCD_LCDPort_3, mode);
  60   1              CyPins_SetPinDriveMode(LCD_LCDPort_4, mode);
  61   1              CyPins_SetPinDriveMode(LCD_LCDPort_5, mode);
  62   1              CyPins_SetPinDriveMode(LCD_LCDPort_6, mode);
  63   1      }
  64          
  65          
  66          /*******************************************************************************
  67          * Function Name: LCD_LCDPort_Read
  68          ********************************************************************************
  69          * Summary:
  70          *  Read the current value on the pins of the Digital Port in right justified 
  71          *  form.
  72          *
  73          * Parameters:  
  74          *  void 
  75          *
  76          * Return: 
  77          *  Returns the current value of the Digital Port as a right justified number
  78          *  
  79          * Note:
  80          *  Macro LCD_LCDPort_ReadPS calls this function. 
  81          *  
  82          *******************************************************************************/
  83          uint8 LCD_LCDPort_Read(void) 
  84          {
  85   1          return (LCD_LCDPort_PS & LCD_LCDPort_MASK) >> LCD_LCDPort_SHIFT;
  86   1      }
  87          
  88          
  89          /*******************************************************************************
  90          * Function Name: LCD_LCDPort_ReadDataReg
  91          ********************************************************************************
  92          * Summary:
  93          *  Read the current value assigned to a Digital Port's data output register
  94          *
  95          * Parameters:  
  96          *  void 
  97          *
  98          * Return: 
  99          *  Returns the current value assigned to the Digital Port's data output register
 100          *  
 101          *******************************************************************************/
 102          uint8 LCD_LCDPort_ReadDataReg(void) 
 103          {
 104   1          return (LCD_LCDPort_DR & LCD_LCDPort_MASK) >> LCD_LCDPort_SHIFT;
 105   1      }
 106          
 107          
 108          /* If Interrupts Are Enabled for this Pins component */ 
 109          #if defined(LCD_LCDPort_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: LCD_LCDPort_ClearInterrupt
C51 COMPILER V8.16   LCD_LCDPORT                                                           12/13/2010 22:57:38 PAGE 3   

                  ********************************************************************************
                  * Summary:
                  *  Clears any active interrupts attached to port and returns the value of the 
                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  void 
                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 LCD_LCDPort_ClearInterrupt(void) 
                  {
                      return (LCD_LCDPort_INTSTAT & LCD_LCDPort_MASK) >> LCD_LCDPort_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 131          
 132          
 133          /* [] END OF FILE */ 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    254    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
